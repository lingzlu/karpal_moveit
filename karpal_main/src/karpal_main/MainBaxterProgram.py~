#!/usr/bin/python
 
import time
import sys
import json
import roslib
import rospy

from RecipeParser import *
from FindObject import *
from PickUpItem import *
from MixItems import *
from karpal_moveit.karpal_moveit_api import *

if __name__ == "__main__":
    if sys.argv is not None and len(sys.argv) > 1:
        #rospy.init_node('baxter_main', anonyouse=True)
        
        print "Opening " + sys.argv[1]

        fileLocation = sys.argv[1]
         
        f = open(fileLocation)
        data = f.read()
 
        parser = RecipeParser()
        parser.parse(data)
        recipeName = parser.recipeName
        ings = parser.recipeIngredients
        tools = parser.recipeTools
        steps = parser.recipeSteps
 
        actionParser = ActionParser(parser.recipeSteps, parser.recipeIngredients, parser.recipeTools);
        actionParser.parse()
        actions = actionParser.actions

        for x in actions:
            print "Step {}:".format(x.id)

            for preAction in x.precursors:
                if (preAction.name == "FIND"):
                    print ("Call the find object service to invoke the finding")
                    #findObjectClient(preAction.item)                    
                elif (preAction.name == "GRASP"):
                    print ("Call the pickup item service")
                    moveit = karpal_moveit_api("left_arm")
                    print moveit

                elif (preAction.name == "PLACE"):
                    print ("Call the place item service")
                elif(preAction.name == "POUR"):
                    print ("Call the pour item service")
                elif(preAction.name == "STIR"):
                    print ("Call the stir service")
                elif(preAction.name == "RETURN"):
                    print ("Call the return item service")
                
                print preAction.name or None
                print preAction.item
                print ""

            print ""
